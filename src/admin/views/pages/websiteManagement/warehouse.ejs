<link rel="stylesheet" href="/admin/css/websiteManagement/tracking.css">
<style>
    .warehouseHeadding {
        color: #252223;
    }

    .btn-close-white {
        filter: none !important;
    }

    .custom-modal {
        max-width: 70%;
    }
</style>
<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold">ðŸ“¦ Warehouse Management</h3>
        <div>
            <!-- <button class="btn btn-success me-2" id="downloadAllwarehouseCsv">
                <i class="fas fa-download me-2"></i> Download CSV
            </button> -->
            <button class="btn btn-pink" data-bs-toggle="modal" data-bs-target="#warehouseModal">
                <i class="fas fa-plus me-2"></i> Add Warehouse
            </button>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#uploadModal">
                Upload CSV
            </button>
        </div>
    </div>

    <div class="card shadow-sm mb-4 d-none" id="searchwarehouseCard">
        <div class="card-body">
            <h5 class="mb-3">Search warehouses</h5>
            <div class="row g-3">

                <div class="col-md-3">
                    <label for="searchStatus" class="form-label">Status</label>
                    <select id="searchStatus" class="form-select">
                        <option value="">All</option>
                        <option value="1">In Progress</option>
                        <option value="2">Pickup</option>
                        <option value="3">Out for Delivery</option>
                        <option value="4">Delivered</option>
                        <option value="5">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="searchDate" class="form-label">Estimate Date</label>
                    <input type="date" class="form-control" id="searchDate">
                </div>


                <div class="col-md-3 d-flex gap-2 align-items-end">
                    <button class="btn btn-primary" id="searchBtn">Search</button>
                    <button class="btn btn-secondary" id="resetBtn">Reset</button>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table id="warehouseTable" class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>#</th>
                            <th>Warehouse Pincode</th>
                            <th>Warehouse Status</th>
                            <th>ODA Charge BucketName</th>
                            <th>Created At</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="warehouseModal" data-bs-backdrop="static" tabindex="-1"
    aria-labelledby="warehouseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg custom-modal">
        <div class="modal-content border-0 rounded-3">
            <div class="modal-header bg-pink text-white">
                <h5 class="modal-title warehouseHeadding" id="warehouseModalLabel">Add Warehouse</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <form id="warehouseForm" enctype='multipart/form-data'>
                <div class="modal-body">
                    <input type="hidden" id="warehouseId">
                    <div class="row g-3">

                        <div class="col-md-6">
                            <label for="pincode" class="form-label">Warehouse Pincode<strong
                                    class="text-danger">*</strong></label>
                            <input type="text" class="form-control" id="pincode" name="pincode"
                                placeholder="Enter Pincode" maxlength="6">
                        </div>


                        <div class="col-md-6">
                            <label for="status" class="form-label">Status <strong class="text-danger">*</strong></label>
                            <select class="form-select" id="status" name="status">
                                <option value="">Select Status</option>
                                <option value="1">Active</option>
                                <option value="2">In-Active</option>

                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="message" class="form-label">Select Message <strong
                                    class="text-danger">*</strong></label>
                            <select class="form-select" id="message" name="message">
                                <option value="">Select Message</option>
                                <option value="ODA 1">ODA 1</option>
                                <option value="ODA 2">ODA 2</option>
                                <option value="Direct">Direct</option>

                            </select>
                        </div>



                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-pink w-100">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="uploadCsvForm" action="/tracking/upload-csv" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="uploadModalLabel">Upload CSV File</h5>
                    <a href="https://dld87tjdltnh8.cloudfront.net/0/admin_v1/test_management/question_bank/764600_pincodes%20%281%29.csv"
                        class="small text-decoration-underline" target="_blank" rel="noopener">
                        Use Demo CSV
                    </a>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="file" class="form-control" name="file" accept=".csv" required />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    let warehouseTable;
    // This ensures the script runs after the DOM is fully loaded
    $(document).ready(function () {


        // Initialize DataTable
        warehouseTable = $('#warehouseTable').DataTable({
            processing: true,
            serverSide: true,
            searching: false,

            ajax: {
                url: '/webWarehouse/warehouseList/',
                type: 'POST',
                data: function (d) {
                    d.warehouseCode = $('#warehouseId').val();
                    d.pickUpLocation = $('#pickUpLocation').val();
                    d.dropLocation = $('#toLocation').val(); // Corrected ID here
                    d.status = $('#searchStatus').val();
                    d.date = $('#searchDate').val();
                }
            },
            columns: [
                {
                    data: null,
                    orderable: false, // Disable ordering for the index column
                    render: (data, type, row, meta) => meta.row + meta.settings._iDisplayStart + 1
                },

                {
                    data: 'pincode',
                    orderable: false,

                }, // Corrected data property to 'pickUpLocation'


                {
                    data: 'status',
                    orderable: false,

                    render: function (data) {
                        // Status color mapping
                        let statusColor = '';
                        let statusText = '';

                        switch (parseInt(data)) { // Ensure data is treated as an integer for comparison
                            case 1:
                                statusColor = 'badge bg-success'; // Pickup
                                statusText = 'Active';
                                break;
                            case 2:
                                statusColor = 'badge bg-primary'; // Out for Delivery
                                statusText = 'Inactive';
                                break;

                            default:
                                statusColor = 'badge bg-secondary'; // Unknown
                                statusText = 'Unknown';
                                break;
                        }

                        return `<span class="${statusColor}">${statusText}</span>`;
                    }
                },

                {
                    data: 'message',
                    orderable: false,

                },
                {
                    data: 'createdAt', // Assuming your server returns the combined date and time in 'Estimate Date'
                    orderable: false,
                    render: function (data) {
                        return moment(data).format('YYYY-MM-DD HH:mm:ss'); // Format the date and time as needed
                    }
                },
                {
                    data: null,
                    orderable: false,
                    render: function (data, type, row) {
                        return `
                            <button class="btn btn-sm btn-primary editBtn" data-id="${row._id}">Edit</button>
                            <button class="btn btn-sm btn-danger deleteBtn" data-id="${row._id}">Delete</button> `;
                    }
                }

            ]
        });

        // Search Button
        $('#searchBtn').click(function () {
            warehouseTable.ajax.reload();
        });

        // Reset Button
        $('#resetBtn').click(function () {
            $('#warehouseId, #pickUpLocation, #toLocation, #searchStatus, #searchDate').val(''); // Included fromLocation and toLocation in reset
            warehouseTable.ajax.reload();
        });

        // Submit Add/Edit Form
        $('#warehouseForm').submit(function (e) {
            e.preventDefault();
            const formElement = document.getElementById('warehouseForm'); // Corrected: Used 'warehouseForm' instead of 'bannerForm'

            // Trimmed values
            const warehouseCode = $('#warehouseCode').val();
            const pincode = $('#pincode').val();
            const status = $('#status').val();
            const message = $('#message').val();


            if (!pincode) {
                toastr.error('Please Enter Pincode', 'Error');
                return;
            }

            if (!status) {
                toastr.error('Please Select Status', 'Error');
                return;
            }

            if (!message) {
                toastr.error('Please Select Message', 'Error');
                return;
            }



            const id = $('#warehouseId').val();
            const formData = new FormData(formElement);

            const actionUrl = id ? `/webWarehouse/editWarehouse/${id}` : '/webWarehouse/addWarehouse';

            $.ajax({
                url: actionUrl,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                dataType: 'json',
                success: function (response) {
                    $('#warehouseModal').modal('hide');
                    $('#warehouseForm')[0].reset();
                    warehouseTable.ajax.reload();
                    toastr.success('Warehouse Data saved successfully!', 'Success');
                    const form = $('#warehouseForm')[0];
                    form.reset(); // Reset the form every time the modal is shown
                },
                error: function (xhr) {
                    const errorMsg = xhr.responseJSON?.message || 'Failed to save warehouse.';
                    toastr.error(errorMsg, 'Error');
                }
            });
        });

        // Edit Button
        $(document).on('click', '.editBtn', function () {
            const id = $(this).data('id');


            $.ajax({
                url: '/webWarehouse/get/' + id,
                type: 'GET',
                success: function (data) {
                    $('#pincode').val(data.pincode); // Added transport mode
                    $('#status').val(data.status);
                    $('#message').val(data.message);
                    $('#warehouseId').val(id);

                    $('#warehouseModal').modal('show');
                }
            });


        });

        $('#warehouseTable').on('click', '.editBtn', function () {
            const warehouseId = $(this).data('id');
            $('#warehouseModalLabel').text('Edit Warehouse')
            $('#warehouseModal').modal('show', this); // Pass the button element for context
        });

        // Delete Button
        $(document).on('click', '.deleteBtn', function () {
            const id = $(this).data('id');

            swalConfirm('Are you sure you want to delete this Warehouse?', function () {
                $.ajax({
                    url: '/webWarehouse/delete/' + id,
                    type: 'DELETE',
                    success: function () {
                        warehouseTable.ajax.reload();
                        toastr.success('Warehouse deleted successfully!', 'Success');
                    },
                    error: function (xhr, status, error) {
                        console.error('Delete failed:', status, error, xhr);
                        toastr.error('Failed to delete Warehouse.', 'Error');
                    }
                });
            });
        });


        // Download CSV
        $('.btn-close').click(function () {
            window.location.reload();
        });

        $('#downloadAllwarehouseCsv').click(function () {
            const params = new URLSearchParams({
                warehouseCode: $('#warehouseId').val(),
                status: $('#searchStatus').val(),
                date: $('#searchDate').val()
            });
            window.location.href = '/webWarehouse/downloadAllCsv?' + params.toString();
        });
    });

</script>
<script>

    $(document).ready(function () {
        $('#uploadCsvForm').on('submit', function (e) {
            e.preventDefault();

            var formData = new FormData(this);

            $.ajax({
                url: '/webWarehouse/upload-csv',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    let msg = `<strong>${response.message}</strong><br/>`;
                    msg += `Saved Entries: ${response.savedCount}<br/>`;
                    msg += `Duplicate Entries: ${response.duplicateCount}<br/>`;

                    if (response.duplicates && response.duplicates.length > 0) {
                        msg += '<ul>';
                        response.duplicates.forEach(function (d) {
                            msg += `<li>Pincode: ${d.pincode}, Reason: ${d.reason}</li>`;
                        });
                        msg += '</ul>';
                    }

                    Swal.fire({
                        icon: 'success',
                        title: 'Upload Result',
                        html: msg,
                        confirmButtonText: 'OK',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.reload();
                        }
                    });


                    $('#uploadModal').modal('hide'); // hide the modal if needed
                    $('#csvUploadForm')[0].reset(); // reset form

                    window.location.reload();
                },
                error: function (xhr) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: xhr.responseJSON?.message || 'Something went wrong'
                    });
                }
            });
        });
    });
</script>