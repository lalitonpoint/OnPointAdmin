<link rel="stylesheet" href="/admin/css/websiteManagement/tracking.css">
<style>
    .trackingHeadding {
        color: #252223;
    }

    .btn-close-white {
        filter: none !important;
    }

    .custom-modal {
        max-width: 70%;
    }
</style>
<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold">ðŸ“¦ Tracking Management</h3>
        <div>
            <button class="btn btn-success me-2" id="downloadAllTrackingCsv">
                <i class="fas fa-download me-2"></i> Download CSV
            </button>
            <button class="btn btn-pink" data-bs-toggle="modal" data-bs-target="#trackingModal">
                <i class="fas fa-plus me-2"></i> Add Tracking
            </button>
            <!-- Button to open modal -->
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#uploadModal">
                Upload CSV
            </button>

        </div>
    </div>

    <div class="card shadow-sm mb-4" id="searchTrackingCard">
        <div class="card-body">
            <h5 class="mb-3">Search Trackings</h5>
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="searchTrackingId" class="form-label">Tracking ID</label>
                    <input type="text" class="form-control" id="searchTrackingId" placeholder="Enter Tracking ID">
                </div>
                <div class="col-md-3">
                    <label for="searchStatus" class="form-label">Status</label>
                    <select id="searchStatus" class="form-select">
                        <option value="">All</option>
                        <option value="1">Pickup</option>
                        <option value="2">In Transit</option>
                        <option value="3">Out for Delivery</option>
                        <option value="4">Delivered</option>
                        <option value="5">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="searchDate" class="form-label">Estimate Delivery Date</label>
                    <input type="date" class="form-control" id="searchDate">
                </div>


                <div class="col-md-3 d-flex gap-2 align-items-end">
                    <button class="btn btn-primary" id="searchBtn">Search</button>
                    <button class="btn btn-secondary" id="resetBtn">Reset</button>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table id="trackingTable" class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>#</th>
                            <th>Tracking ID</th>
                            <th>From Location</th>
                            <th>Drop Location</th>
                            <th>Transport Mode</th>
                            <th>No. of Mode</th>
                            <th>Status</th>
                            <th>Estimate Delivery Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="trackingModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="trackingModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg custom-modal">
        <div class="modal-content border-0 rounded-3">
            <div class="modal-header bg-pink text-white">
                <h5 class="modal-title trackingHeadding" id="trackingModalLabel">Add Tracking</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <form id="trackingForm" enctype='multipart/form-data'>
                <div class="modal-body">
                    <input type="hidden" id="trackingId" name="id">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="trackingCode" class="form-label">Tracking ID <strong
                                    class="text-danger">*</strong></label>
                            <input type="text" class="form-control" id="trackingCode" name="trackingId"
                                autocomplete="off" placeholder="Enter Tracking ID">
                        </div>

                        <div class="col-md-6">
                            <label for="pickUpLocation" class="form-label">Pickup Location<strong
                                    class="text-danger">*</strong></label>
                            <input type="text" class="form-control" id="pickUpLocation"
                                placeholder="Enter Pickup Location" name="pickUpLocation">
                        </div>
                        <div class="col-md-6">
                            <label for="dropLocation" class="form-label">Drop Location<strong
                                    class="text-danger">*</strong> </label>
                            <input type="text" class="form-control" id="dropLocation" placeholder="Enter Drop Location"
                                name="dropLocation">
                        </div>
                        <div class="col-md-6">
                            <label for="transportMode" class="form-label">Transport Mode <strong
                                    class="text-danger">*</strong></label>

                            <select class="form-select" id="transportMode" name="transportMode">
                                <option value="">Select Mode</option>
                                <option value="By Train">By Train</option>
                                <option value="By Surface">By Surface</option>
                                <option value="By Air">By Air</option>
                            </select>
                        </div>

                        <div class="col-md-6">
                            <label for="noOfPacking" class="form-label">No. of Package <strong
                                    class="text-danger">*</strong></label>
                            <input type="number" class="form-control" id="noOfPacking" name="noOfPacking"
                                placeholder="Enter No. of Package">
                        </div>


                        <!-- <div class="col-md-6">
                            <label for="deliveryTime" class="form-label">Time <strong
                                    class="text-danger">*</strong></label>
                            <input type="time" class="form-control" id="deliveryTime" name="deliveryTime">
                        </div> -->

                        <div class="col-md-6">
                            <label for="trackingStatus" class="form-label">Status <strong
                                    class="text-danger">*</strong></label>
                            <select class="form-select" id="trackingStatus" name="status">
                                <option value="">Select Status</option>
                                <option value="1">Pickup</option>
                                <option value="2">In Transit</option>
                                <option value="3">Out for Delivery</option>
                                <option value="4">Delivered</option>
                                <option value="5">Cancelled</option>
                            </select>
                        </div>
                        <div id="transitDeliveryContainer" class="d-none">
                            <button type="button" id="addMore" class="btn btn-success btn-sm">+</button>
                            <button type="button" class="btn btn-danger btn-sm removeTransit">Ã—</button>
                            <div class="row transit-delivery-group align-items-end">
                                <div class="col-md-6">
                                    <label class="form-label">Transit City</label>
                                    <input type="text" class="form-control" name="transitTracking[]"
                                        placeholder="Enter Tracking City">
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Transit Date</label>
                                    <input type="datetime-local" class="form-control" name="transitDate[]">
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 delDiv d-none ">
                            <label for="deliveryDate" class="form-label deliveryDate ">Delivery Date</label>
                            <input type="datetime-local" class="form-control" id="deliveryDate" name="deliveryDate">
                        </div>

                        <div class="col-md-6">
                            <label for="clientName" class="form-label">Client Name <strong
                                    class="text-danger">*</strong></label>
                            <input type="text" class="form-control" id="clientName" name="clientName" autocomplete="off"
                                placeholder="Enter Client Name">
                        </div>

                        <div class="col-md-6">
                            <label for="estimateDate" class="form-label">Estimate Delivery Date <strong
                                    class="text-danger">*</strong></label>
                            <input type="datetime-local" class="form-control" id="estimateDate" name="estimateDate">
                        </div>

                        <div class="col-md-6 pod d-none">
                            <label for="pod" class="form-label">POD</label>
                            <input type="file" class="form-control image_view" id="pod" name="pod" accept="image/*">

                            <div id="filePreviewContainer" class="mt-2" style="display: none;">
                                <img id="imagePreview" src="#" alt="Tracking Image Preview"
                                    style="max-width: 100px; max-height: 100px; display: none;">
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label for="invoiceDate" class="form-label">Invoice Date </label>
                            <input type="datetime-local" class="form-control" id="invoiceDate" name="invoiceDate">
                        </div>

                        <div class="col-md-6">
                            <label for="connectionDate" class="form-label">Connection Date </label>
                            <input type="datetime-local" class="form-control" id="connectionDate" name="connectionDate">
                        </div>
                        <div class="col-md-6">
                            <label for="consigneeName" class="form-label">Consignee Name</label>
                            <input type="text" class="form-control" id="consigneeName" name="consigneeName"
                                placeholder="Enter Consignee Name">
                        </div>
                        <div class="col-md-6">
                            <label for="mobile" class="form-label">Phone No. </label>
                            <input type="text" class="form-control" id="mobile" name="mobile"
                                placeholder="Enter Phone No.">
                        </div>

                        <div class="col-md-6">
                            <label for="consignorPincode" class="form-label">Consignor Pin Code </label>
                            <input type="text" class="form-control" id="consignorPincode" name="consignorPincode"
                                placeholder="Enter Consignor Pin Code">
                        </div>

                        <!-- <div class="col-md-6">
                            <label for="lrNo" class="form-label">Lr NO. </label>
                            <input type="text" class="form-control" id="lrNo" name="lrNo" placeholder="Enter Lr No.">
                        </div> -->
                        <div class="col-md-6">
                            <label for="referenceNo" class="form-label">Reference Lr. No</label>
                            <input type="text" class="form-control" id="referenceNo" name="referenceNo"
                                placeholder="Enter Reference Lr No.">
                        </div>
                        <div class="col-md-6">
                            <label for="invoiceNumber" class="form-label">Invoice Number</label>
                            <input type="text" class="form-control" id="invoiceNumber" name="invoiceNumber"
                                placeholder="Enter Invoice Number">
                        </div>
                        <div class="col-md-6">
                            <label for="invoiceValue" class="form-label">Invoice Value</label>
                            <input type="text" class="form-control" id="invoiceValue" name="invoiceValue"
                                placeholder="Enter Invoice Value">
                        </div>
                        <div class="col-md-6">
                            <label for="boxes" class="form-label">Boxes</label>
                            <input type="text" class="form-control" id="boxes" name="boxes" placeholder="Enter Boxes">
                        </div>
                        <div class="col-md-6">
                            <label for="ewayBillNo" class="form-label">Eway bill No.</label>
                            <input type="text" class="form-control" id="ewayBillNo" name="ewayBillNo"
                                placeholder="Enter Bill No.">
                        </div>

                        <div class="col-md-6">
                            <label for="connectionPartner" class="form-label">Connection Partner</label>
                            <input type="text" class="form-control" id="connectionPartner" name="connectionPartner"
                                placeholder="Enter Connection Partner">
                        </div>
                        <div class="col-md-6">
                            <label for="partnerCnNumber" class="form-label">Partner CN Number</label>
                            <input type="text" class="form-control" id="partnerCnNumber" name="partnerCnNumber"
                                placeholder="Enter Partner CN Number">
                        </div>
                        <div class="col-md-6">
                            <label for="actualWeight" class="form-label">Actual Weight</label>
                            <input type="text" class="form-control" id="actualWeight" name="actualWeight"
                                placeholder="Enter Actual Weight">
                        </div>

                        <div class="col-md-6">
                            <label for="chargedWeight" class="form-label">Charged Weight</label>
                            <input type="text" class="form-control" id="chargedWeight" name="chargedWeight"
                                placeholder="Enter Charged Weight">
                        </div>

                        <div class="col-md-6">
                            <label for="tat" class="form-label">TAT</label>
                            <input type="text" class="form-control" id="tat" name="tat" placeholder="Enter TAT">
                        </div>
                        <div class="col-md-6">
                            <label for="edd" class="form-label">EDD</label>
                            <input type="text" class="form-control" id="edd" name="edd" placeholder="Enter EDD">
                        </div>
                        <div class="col-md-6">
                            <label for="add" class="form-label">ADD</label>
                            <input type="text" class="form-control" id="add" name="add" placeholder="Enter ADD">
                        </div>
                        <div class="col-md-6">
                            <label for="remarks" class="form-label">Remarks</label>
                            <input type="text" class="form-control" id="remarks" name="remarks"
                                placeholder="Enter Remarks">
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-pink w-100">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="uploadCsvForm" action="/tracking/upload-csv" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="uploadModalLabel">Upload CSV File</h5>
                    <a href="https://dld87tjdltnh8.cloudfront.net/0/admin_v1/test_management/question_bank/11229380_shipment-data.csv"
                        class="small text-decoration-underline" target="_blank" rel="noopener">
                        Use Demo CSV
                    </a>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="file" class="form-control" name="file" accept=".csv" required />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    let trackingTable;
    // This ensures the script runs after the DOM is fully loaded
    $(document).ready(function () {

        $('#pod').on('change', function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').attr('src', e.target.result).show();
                    $('#filePreviewContainer').show();
                };
                reader.readAsDataURL(file);
            }
        });

        // Initialize DataTable
        trackingTable = $('#trackingTable').DataTable({
            processing: true,
            serverSide: true,
            ajax: {
                url: '/tracking/trackingList/',
                type: 'POST',
                data: function (d) {
                    d.trackingCode = $('#searchTrackingId').val();
                    d.pickUpLocation = $('#pickUpLocation').val();
                    d.dropLocation = $('#toLocation').val(); // Corrected ID here
                    d.status = $('#searchStatus').val();
                    d.date = $('#searchDate').val();
                }
            },
            columns: [
                {
                    data: null,
                    orderable: false, // Disable ordering for the index column
                    render: (data, type, row, meta) => meta.row + meta.settings._iDisplayStart + 1
                },
                {
                    data: 'trackingId',
                    orderable: false,

                },
                {
                    data: 'pickUpLocation',
                    orderable: false,

                }, // Corrected data property to 'pickUpLocation'
                {
                    data: 'dropLocation',
                    orderable: false,

                },
                {
                    data: 'transportMode',
                    orderable: false,

                },
                { data: 'noOfPacking' },

                {
                    data: 'status',
                    orderable: false,

                    render: function (data) {
                        // Status color mapping
                        let statusColor = '';
                        let statusText = '';

                        switch (parseInt(data)) { // Ensure data is treated as an integer for comparison
                            case 2:
                                statusColor = 'badge bg-warning'; // Pickup
                                statusText = 'In Transit';
                                break;
                            case 1:
                                statusColor = 'badge bg-info'; // Out for Delivery
                                statusText = 'Pickup';
                                break;
                            case 3:
                                statusColor = 'badge bg-primary'; // In Transit
                                statusText = 'Out for Delivery';
                                break;
                            case 4:
                                statusColor = 'badge bg-success'; // Delivered
                                statusText = 'Delivered';
                                break;
                            case 5:
                                statusColor = 'badge bg-danger'; // Cancelled
                                statusText = 'Cancelled';
                                break;
                            default:
                                statusColor = 'badge bg-secondary'; // Unknown
                                statusText = 'Unknown';
                                break;
                        }

                        return `<span class="${statusColor}">${statusText}</span>`;
                    }
                },



                {
                    data: 'estimateDate', // Assuming your server returns the combined date and time in 'Estimate Date'
                    render: function (data) {
                        return moment(data).format('YYYY-MM-DD HH:mm:ss'); // Format the date and time as needed
                    }
                },
                {
                    data: null,
                    orderable: false,
                    render: function (data, type, row) {
                        return `
                            <button class="btn btn-sm btn-primary editBtn" data-id="${row._id}">Edit</button>
                            <button class="btn btn-sm btn-danger deleteBtn" data-id="${row._id}">Delete</button> `;
                    }
                }
            ]
        });

        // Search Button
        $('#searchBtn').click(function () {
            trackingTable.ajax.reload();
        });

        // Reset Button
        $('#resetBtn').click(function () {
            $('#searchTrackingId, #pickUpLocation, #toLocation, #searchStatus, #searchDate').val(''); // Included fromLocation and toLocation in reset
            trackingTable.ajax.reload();
        });

        // Submit Add/Edit Form
        $('#trackingForm').submit(function (e) {
            e.preventDefault();
            const formElement = document.getElementById('trackingForm'); // Corrected: Used 'trackingForm' instead of 'bannerForm'

            // Trimmed values
            const trackingCode = $('#trackingCode').val().trim();
            const pickUpLocation = $('#pickUpLocation').val().trim();
            const dropLocation = $('#dropLocation').val().trim();
            const transportMode = $('#transportMode').val().trim();
            const noOfPacking = $('#noOfPacking').val().trim();
            const deliveryDate = $('#deliveryDate').val().trim();
            const estimateDate = $('#estimateDate').val().trim();
            const clientName = $('#clientName').val().trim();

            // const deliveryTime = $('#deliveryTime').val().trim();
            const trackingStatus = $('#trackingStatus').val().trim();
            const pod = $('#pod')[0].files[0];
            // const id = $('#trackingId').val();
            const transitData = [];
            $(".transit-delivery-group").each(function () {
                const city = $(this).find('input[name="transitTracking[]"]').val();
                const date = $(this).find('input[name="transitDate[]"]').val();

                if (city && date) {
                    transitData.push({ city, date });
                }
            });


            // console.log(transitData);

            // Validation
            if (!trackingCode) {
                toastr.error('Please enter tracking ID', 'Error');
                return;
            }

            if (!pickUpLocation) {
                toastr.error('Please enter pickup location', 'Error');
                return;
            }
            if (!dropLocation) {
                toastr.error('Please enter drop location', 'Error');
                return;
            }
            if (!transportMode) {
                toastr.error('Please Select transport mode', 'Error');
                return;
            }
            if (!noOfPacking) {
                toastr.error('Please enter number of packings', 'Error');
                return;
            }

            // if (!deliveryTime) {
            //     toastr.error('Please select delivery time.', 'Error');
            //     return;
            // }
            if (!trackingStatus) {
                toastr.error('Please select tracking status.', 'Error');
                return;
            }
            if (!clientName) {
                toastr.error('Please enter Client Name', 'Error');
                return;
            }
            if (!estimateDate) {
                toastr.error('Please select a Estimate date.', 'Error');
                return;
            }

            // Use FormData for file + text upload
            const formData = new FormData();
            formData.append('trackingCode', trackingCode);
            formData.append('pickUpLocation', pickUpLocation);
            formData.append('dropLocation', dropLocation);
            formData.append('transportMode', transportMode);
            formData.append('noOfPacking', noOfPacking);
            formData.append('deliveryDate', deliveryDate);
            formData.append('estimateDate', estimateDate);
            formData.append('clientName', clientName);
            formData.append('status', trackingStatus);
            formData.append('pod', pod);
            formData.append('invoiceDate', $('#invoiceDate').val().trim());
            formData.append('connectionDate', $('#connectionDate').val().trim());
            formData.append('consigneeName', $('#consigneeName').val().trim());
            formData.append('mobile', $('#mobile').val().trim());
            formData.append('consignorPincode', $('#consignorPincode').val().trim());
            // formData.append('lrNo', $('#lrNo').val().trim());
            formData.append('referenceNo', $('#referenceNo').val().trim());
            formData.append('invoiceNumber', $('#invoiceNumber').val().trim());
            formData.append('invoiceValue', $('#invoiceValue').val().trim());
            formData.append('boxes', $('#boxes').val().trim());
            formData.append('ewayBillNo', $('#ewayBillNo').val().trim());
            formData.append('connectionPartner', $('#connectionPartner').val().trim());
            formData.append('partnerCnNumber', $('#partnerCnNumber').val().trim());
            formData.append('actualWeight', $('#actualWeight').val().trim());
            formData.append('chargedWeight', $('#chargedWeight').val().trim());
            formData.append('tat', $('#tat').val().trim());
            formData.append('edd', $('#edd').val().trim());
            formData.append('add', $('#add').val().trim());
            formData.append('remarks', $('#remarks').val().trim());
            const id = $('#trackingId').val();
            // const formData = new FormData(formElement);
            // console.log('formData', formData);
            // console.log('formElement', formElement);
            // alert(trackingStatus)
            // return;

            if (trackingStatus != 4) {
                formData.delete("pod");
            }

            if (trackingStatus == 2) {
                formData.append('transitData', JSON.stringify(transitData));

            }



            const actionUrl = id ? `/tracking/editTracking/${id}` : '/tracking/addTracking';

            $.ajax({
                url: actionUrl,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                dataType: 'json',
                success: function (response) {
                    $('#trackingModal').modal('hide');
                    $('#trackingForm')[0].reset();
                    trackingTable.ajax.reload();
                    toastr.success('Tracking Data saved successfully!', 'Success');
                    const form = $('#trackingForm')[0];
                    form.reset(); // Reset the form every time the modal is shown
                    $('#trackingModalLabel').text('Add Tracking')
                    $('#filePreviewContainer').addClass('d-none');
                    $('#transitDeliveryContainer').addClass('d-none');

                    // Corrected this line
                    $('.transit-delivery-group').remove();

                    const newFields = `
    <div class="row transit-delivery-group mt-2">
        <div class="col-md-6">
            <label class="form-label">Transit City</label>
            <input type="text" class="form-control" id="transitTracking" name="transitTracking[]" placeholder="Enter Tracking City">
        </div>
        <div class="col-md-6">
            <label class="form-label">Transit Date</label>
            <input type="datetime-local" class="form-control" name="transitDate[]">
        </div>
    </div>
`;

                    // Append the new fields
                    $(newFields).appendTo('#transitDeliveryContainer');




                    // window.location.reload();
                },
                error: function (xhr) {
                    const errorMsg = xhr.responseJSON?.message || 'Failed to save tracking.';
                    toastr.error(errorMsg, 'Error');
                }
            });
        });
        $('#trackingStatus').change(function () {
            let trackingVal = $(this).val();
            let trackingText = $(this).find('option:selected').text() + ' Date';
            const trackingModalLabel = $('#trackingModalLabel').text();

            // Always update label text first
            $('.deliveryDate').text(trackingText);

            if (trackingVal != '') {
                if (trackingVal == 2) {
                    $('#transitDeliveryContainer').removeClass('d-none');
                    $('.delDiv').addClass('d-none');

                } else {
                    $('#transitDeliveryContainer').addClass('d-none');
                    $('.delDiv').removeClass('d-none');

                }
            } else {
                $('#transitDeliveryContainer').addClass('d-none');
                $('.deliveryDate').text('Delivery Date');
                $('.delDiv').addClass('d-none');
            }

            // POD show/hide logic
            if (trackingModalLabel.includes('Edit') && trackingVal == 4) {
                $('.pod').removeClass('d-none');
            } else {
                $('.pod').addClass('d-none');
            }

            // Reset delivery date value
            $('#deliveryDate').val('');
        });


        // Edit Button
        $(document).on('click', '.editBtn', function () {
            const id = $(this).data('id');


            $.ajax({
                url: '/tracking/get/' + id,
                type: 'GET',
                success: function (data) {
                    $('#trackingId').val(data._id);
                    $('#trackingCode').val(data.trackingId);
                    $('#pickUpLocation').val(data.pickUpLocation); // Added pickup location
                    $('#dropLocation').val(data.dropLocation); // Added drop location
                    $('#transportMode').val(data.transportMode); // Added transport mode
                    $('#noOfPacking').val(data.noOfPacking); // Added no of packing
                    $('#trackingStatus').val(data.status);
                    $('#clientName').val(data.clientName);


                    $('#consigneeName').val(data.consigneeName);
                    $('#mobile').val(data.mobile);
                    $('#consignorPincode').val(data.consignorPincode);
                    // $('#lrNo').val(data.lrNo);
                    $('#referenceNo').val(data.referenceNo);
                    $('#invoiceNumber').val(data.invoiceNumber);
                    $('#invoiceValue').val(data.invoiceValue);
                    $('#boxes').val(data.boxes);
                    $('#ewayBillNo').val(data.ewayBillNo);
                    $('#connectionPartner').val(data.connectionPartner);
                    $('#partnerCnNumber').val(data.partnerCnNumber);
                    $('#actualWeight').val(data.actualWeight);
                    $('#chargedWeight').val(data.chargedWeight);
                    $('#tat').val(data.tat);
                    $('#edd').val(data.edd);
                    $('#add').val(data.add);
                    $('#remarks').val(data.remarks);

                    // Ensure seconds are added if missing
                    let formattedDate = moment(data.estimateDate, moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');
                    $('#estimateDate').val(formattedDate);

                    let estiInvoiceDate = moment(data.invoiceDate, moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');
                    $('#invoiceDate').val(estiInvoiceDate);



                    let formattedconnectionDate = moment(data.estimateDate, moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');

                    $('#connectionDate').val(formattedconnectionDate);


                    let rawDateTime = data.deliveryStatus[data.status].deliveryDateTime;
                    let formattedDateTime = moment(rawDateTime, moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');
                    // console.log(formattedDateTime); // Outputs: 2025-04-23T16:28:00

                    if (data.status == 2) {
                        // Check if transitData exists and is an array
                        if (Array.isArray(data.deliveryStatus[2].transitData)) {
                            // console.log('oooooo', data.deliveryStatus[2].transitData);

                            // Clear the container before appending new elements
                            $('.transit-delivery-group').remove();

                            // Loop through each item in transitData
                            data.deliveryStatus[2].transitData.forEach(item => {
                                // console.log('xxx', item);

                                // Convert date to the required format for datetime-local input (YYYY-MM-DDTHH:mm)
                                let formattedDateTime = moment(item.date, moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');

                                // Append transit data HTML
                                $('#transitDeliveryContainer').append(`
                <div class="row transit-delivery-group mt-2">
                    <div class="col-md-6">
                        <label class="form-label">Transit City</label>
                        <input type="text" class="form-control" id="transitTracking" name="transitTracking[]" placeholder="Enter Tracking City" value="${item.city}">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Transit Date</label>
                        <input type="datetime-local" class="form-control" name="transitDate[]" value="${formattedDateTime}">
                    </div>
                </div>
            `);
                            });
                            $('#transitDeliveryContainer').removeClass('d-none');

                        } else {
                            console.error('Invalid transitData format or missing data');
                        }
                    } else {
                        // Hide the transit delivery container if status is not 1

                        $('.delDiv').removeClass('d-none');

                        $('#deliveryDate').val(formattedDateTime);

                        $('#transitDeliveryContainer').addClass('d-none');
                    }

                    if (data.status == 4) {
                        $('.pod').removeClass('d-none');
                        $('#pod').attr('src', data.pod);
                        // alert(data.pod);

                        if (data.pod) {
                            // alert(11);
                            $('#filePreviewContainer').removeClass('d-none');

                            const imagePreview = $('#imagePreview');

                            const imagePreviewContainer = $('#filePreviewContainer');

                            imagePreview.attr('src', data.pod);
                            imagePreviewContainer.show();
                            imagePreview.css("display", "block");


                        }
                    }
                    else {
                        $('.pod').addClass('d-none');
                    }
                    $('#trackingModal').modal('show');
                }
            });



        });

        $('#trackingTable').on('click', '.editBtn', function () {
            const trackingId = $(this).data('id');
            $('#trackingModalLabel').text('Edit Tracking')
            $('#trackingModal').modal('show', this); // Pass the button element for context
        });

        // Delete Button
        $(document).on('click', '.deleteBtn', function () {
            const id = $(this).data('id');

            swalConfirm('Are you sure you want to delete this tracking?', function () {
                $.ajax({
                    url: '/tracking/delete/' + id,
                    type: 'DELETE',
                    success: function () {
                        trackingTable.ajax.reload();
                        toastr.success('Tracking deleted successfully!', 'Success');
                    },
                    error: function (xhr, status, error) {
                        console.error("Error deleting tracking:", status, error, xhr);
                        toastr.error('Failed to delete tracking.', 'Error');
                    }
                });
            });
        });


        // Download CSV
        $('.btn-close').click(function () {
            window.location.reload();
        });

        $('#downloadAllTrackingCsv').click(function () {
            const params = new URLSearchParams({
                trackingCode: $('#searchTrackingId').val(),
                status: $('#searchStatus').val(),
                date: $('#searchDate').val()
            });
            window.location.href = '/tracking/downloadCsv?' + params.toString();
        });
    });

</script>
<script>
    $('#addMore').click(function () {
        const newFields = `
        <div class="row transit-delivery-group mt-2">
            <div class="col-md-6">
                <label class="form-label">Transit City</label>
                <input type="text" class="form-control" id="transitTracking" name="transitTracking[]" placeholder="Enter Tracking City">
            </div>
            <div class="col-md-6">
                <label class="form-label">Transit Date</label>
                <input type="datetime-local" class="form-control" name="transitDate[]">
            </div>
        </div>`;

        $(newFields).hide().appendTo('#transitDeliveryContainer').slideDown(300);


        // Add click event to the cross button to remove the group



    });
    $('.removeTransit').click(function () {
        let $groups = $('#transitDeliveryContainer').find('.transit-delivery-group');
        if ($groups.length > 1) {
            $groups.last().slideUp(300, function () {
                $(this).remove();
            });
        }
    });



</script>

<script>

    $(document).ready(function () {
        $('#uploadCsvForm').on('submit', function (e) {
            e.preventDefault();

            var formData = new FormData(this);

            $.ajax({
                url: '/tracking/upload-csv',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    let msg = `<strong>${response.message}</strong><br/>`;
                    msg += `Saved Entries: ${response.savedCount}<br/>`;
                    msg += `Duplicate Entries: ${response.duplicateCount}<br/>`;

                    if (response.duplicates && response.duplicates.length > 0) {
                        msg += '<ul>';
                        response.duplicates.forEach(function (d) {
                            msg += `<li>Tracking ID: ${d.trackingId}, Reason: ${d.reason}</li>`;
                        });
                        msg += '</ul>';
                    }

                    Swal.fire({
                        icon: 'success',
                        title: 'Upload Result',
                        html: msg
                    });

                    $('#uploadModal').modal('hide'); // hide the modal if needed
                    $('#csvUploadForm')[0].reset(); // reset form
                },
                error: function (xhr) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: xhr.responseJSON?.message || 'Something went wrong'
                    });
                }
            });
        });
    });
</script>