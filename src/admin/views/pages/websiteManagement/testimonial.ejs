<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Testimonial Management</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

    <style>
        .btn-pink {
            background-color: #e91e63;
            color: white;
        }

        .btn-pink:hover {
            background-color: #c2185b;
        }

        .table th,
        .table td {
            vertical-align: middle;
            text-align: center;
        }

        .modal-title {
            font-weight: bold;
        }

        .custom-modal {
            max-width: 70%;
        }

        .ck-editor__editable {
            min-height: 200px !important;
            /* Adjusted for better fit */
        }

        .table-responsive {
            max-height: 600px;
            /* Slightly increased for more content */
            overflow-y: auto;
        }

        /* Optional: Custom toast styles - you can add more here */
        .toast-success {
            background-color: #28a745 !important;
        }

        .toast-error {
            background-color: #dc3545 !important;
        }

        .toast-warning {
            background-color: #ffc107 !important;
            color: #000 !important;
        }

        .toast-info {
            background-color: #17a2b8 !important;
        }

        /* Initially hide the search testimonial div */
        #searchTestimonialsCard {
            display: none;
        }
    </style>
</head>

<body>

    <div class="container-fluid mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold">âœ¨ Testimonial Management</h3>
            <button class="btn btn-pink" data-bs-toggle="modal" data-bs-target="#testimonialModal">
                <i class="fas fa-plus me-2"></i> Add Testimonial
            </button>
        </div>

        <div class="card shadow-sm mb-4" id="searchTestimonialsCard">
            <div class="card-body">
                <h5 class="mb-3">Search Testimonials</h5>
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="searchName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="searchName" placeholder="Enter Name">
                    </div>
                    <div class="col-md-3">
                        <label for="searchDesignation" class="form-label">Designation</label>
                        <input type="text" class="form-control" id="searchDesignation" placeholder="Enter Designation">
                    </div>
                    <div class="col-md-3">
                        <label for="searchRating" class="form-label">Rating</label>
                        <select id="searchRating" class="form-select">
                            <option value="">All</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="searchStatus" class="form-label">Status</label>
                        <select id="searchStatus" class="form-select">
                            <option value="">All</option>
                            <option value="1">Active</option>
                            <option value="2">Inactive</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="searchCreatedAt" class="form-label">Created At</label>
                        <input type="date" class="form-control" id="searchCreatedAt">
                    </div>
                    <div class="col-md-3">
                        <div class="d-flex gap-2 align-items-end">
                            <button class="btn btn-primary" id="searchBtn">Search</button>
                            <button class="btn btn-secondary" id="resetBtn">Reset</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow-sm">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="testimonialTable" class="table table-bordered table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>Name</th>
                                <th>Designation</th>
                                <th>Profile Image</th>
                                <th>Rating</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="testimonialModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg custom-modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Add Testimonial</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="testimonialForm">
                        <input type="hidden" id="testimonialId">

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="name" class="form-label">Profile Name <strong
                                        class="text-danger">*</strong></label>
                                <input type="text" class="form-control" id="name" name="name"
                                    placeholder="Enter Profile Name">
                            </div>
                            <div class="col-md-6">
                                <label for="designation" class="form-label">Profile Designation <strong
                                        class="text-danger">*</strong></label>
                                <input type="text" class="form-control" id="designation" name="designation"
                                    placeholder="Enter Designation">
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Profile Image <strong class="text-danger">*</strong></label>
                                <input type="file" class="form-control" name="image" id="profile_image"
                                    accept="image/*">
                                <div id="imagePreviewContainer" class="mt-2" style="display: none;">
                                    <img id="imagePreview" src="#" alt="Profile Image Preview"
                                        style="max-width: 100px; max-height: 100px;">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Rating <strong class="text-danger">*</strong></label>
                                <select class="form-select" name="rating" id="rating">
                                    <option value="">Select Rating</option>
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Status <strong class="text-danger">*</strong></label>
                                <select class="form-select" name="status" id="status">
                                    <option value="">Select Status</option>
                                    <option value="1">Active</option>
                                    <option value="2">Inactive</option>
                                </select>
                            </div>

                        </div>


                        <div class="mb-3">
                            <label class="form-label" for="message">Testimonial Message <strong
                                    class="text-danger">*</strong></label>
                            <textarea class="form-control" name="description" id="testmonial_description"
                                rows="5"></textarea>
                        </div>

                        <button type="submit" class="btn btn-pink w-100">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initially hide the search testimonial card using jQuery
            const searchTestimonialsCard = $('#searchTestimonialsCard');
            searchTestimonialsCard.hide();

            // Slide down the search testimonial card when the page loads
            $(window).on('load', function () {
                searchTestimonialsCard.slideDown(1000); // Adjust the duration (in milliseconds) as needed
            });

            let blogEditor; // Declare editor outside the create function
            let table = $('#testimonialTable').DataTable({ // Initialize DataTable first
                processing: true,
                serverSide: true,
                pageLength: 10,
                lengthMenu: [10, 25, 50, 100],
                scrollY: "400px",
                scrollCollapse: true,
                ajax: {
                    url: '/testimonial/testimonialList',
                    type: 'POST'
                },
                columns: [{
                    data: null,
                    render: (data, type, row, meta) => meta.row + meta.settings._iDisplayStart + 1
                },
                {
                    data: 'name'
                },
                {
                    data: 'designation'
                },
                {
                    data: 'profileImage',
                    render: (data) => `<img src="${data}" class="rounded-circle" width="50" height="50">`
                },
                {
                    data: 'rating'
                },
                {
                    data: 'status',
                    render: (data, type, row) => {
                        const statusText = data === 1 ? 'Active' : 'Inactive';
                        const newStatus = data === 1 ? 2 : 1; // Toggle status
                        return `<span class="badge ${data === 1 ? 'bg-success' : 'bg-secondary'} changeStatus" data-id='${row._id}' data-status='${newStatus}' style="cursor: pointer;">${statusText}</span>`;
                    }
                }, // Added badge for better visual and clickability
                {
                    data: 'createdAt',
                    render: (data) => new Date(data).toLocaleString()
                },
                {
                    data: null,
                    render: (data, type, row) => `
                                        <button class="btn btn-sm btn-warning editTestimonialBtn" data-id='${row._id}'><i class="fas fa-edit"></i> Edit</button>
                                        <button class="btn btn-sm btn-danger delTestimonialBtn" data-id='${row._id}'><i class="fas fa-trash"></i> Delete</button>
                                    `
                }
                ]
            });

            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "5000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            // Initialize CKEditor after DataTable is initialized
            ClassicEditor.create(document.querySelector('#testmonial_description'))
                .then(editor => {
                    blogEditor = editor;
                })
                .catch(error => {
                    console.error(error);
                });

            // Image Preview Functionality
            $('#profile_image').change(function () {
                const file = this.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').attr('src', e.target.result);
                        $('#imagePreviewContainer').show();
                    }
                    reader.readAsDataURL(file);
                } else {
                    $('#imagePreview').attr('src', '#');
                    $('#imagePreviewContainer').hide();
                }
            });

            $('#testimonialModal').on('submit', function (e) {
                e.preventDefault();
                const formElement = document.getElementById('testimonialForm');
                if (formElement) {
                    let isValid = true;

                    const name = $('#name').val().trim();
                    if (!name) {
                        toastr.error('Profile Name is required.', 'Validation Error');
                        return; // Stop further validation and form submission
                    }

                    const designation = $('#designation').val().trim();
                    if (!designation) {
                        toastr.error('Profile Designation is required.', 'Validation Error');
                        return; // Stop further validation and form submission
                    }

                    const profileImage = $('#profile_image')[0].files[0];
                    if (!profileImage && !$('#testimonialId').val()) { // Required on add
                        toastr.error('Profile Image is required on adding new testimonial.', 'Validation Error');
                        return; // Stop further validation and form submission
                    }

                    const rating = $('#rating').val();
                    if (!rating) {
                        toastr.error('Rating is required.', 'Validation Error');
                        return; // Stop further validation and form submission
                    }

                    const status = $('#status').val();
                    if (!status) {
                        toastr.error('Status is required.', 'Validation Error');
                        return; // Stop further validation and form submission
                    }

                    const description = blogEditor ? blogEditor.getData().trim() : $('#testmonial_description').val().trim();
                    if (!description) {
                        toastr.error('Testimonial Message is required.', 'Validation Error');
                        return; // Stop further validation and form submission
                    }

                    const formData = new FormData(formElement);
                    const id = $('#testimonialId').val();
                    const actionUrl = id ? '/testimonial/editTestimonial/' + id : '/testimonial/addTestimonial';

                    // Update description in FormData with CKEditor content
                    if (blogEditor) {
                        formData.set('description', blogEditor.getData());
                    }

                    $.ajax({
                        url: actionUrl,
                        type: 'post',
                        data: formData,
                        processData: false,
                        contentType: false,
                        dataType: 'json',
                        success: function () {
                            $('#testimonialModal').modal('hide');
                            window.location.reload();
                            $('#testimonialForm')[0].reset();
                            if (blogEditor) {
                                blogEditor.setData('');
                            }
                            $('#testimonialId').val('');
                            $('#modalTitle').text('Add Testimonial');
                            toastr.success('Testimonial saved successfully!', 'Success');
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX request failed:", status, error, xhr);
                            toastr.error('An error occurred while saving the testimonial.', 'Error'); // Use toastr for AJAX error
                        }
                    });
                } else {
                    console.error("Error: The form element with ID 'testimonialForm' was not found.");
                }
            });

            $('#testimonialModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget); // Button that triggered the modal
                const id = button.data('id'); // Extract info from data-* attributes
                const modalTitle = $('#modalTitle');
                const testimonialId = $('#testimonialId');
                const form = $('#testimonialForm')[0];
                const imagePreview = $('#imagePreview');
                const imagePreviewContainer = $('#imagePreviewContainer');

                form.reset(); // Reset the form every time the modal is shown
                if (blogEditor) {
                    blogEditor.setData('');
                }
                testimonialId.val('');
                imagePreview.attr('src', '#');
                imagePreviewContainer.hide();
                modalTitle.text('Add Testimonial');

                if (id) {
                    modalTitle.text('Edit Testimonial');
                    testimonialId.val(id);
                    // Fetch testimonial data and populate the form for editing
                    $.ajax({
                        url: '/testimonial/getTestimonial/' + id, // Replace with your actual route
                        type: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            $('#name').val(data.name);
                            $('#designation').val(data.designation);
                            $('#rating').val(data.rating);
                            $('#status').val(data.status);
                            // $('#sortOrder').val(data.sortOrder); // Populate sort order - Assuming you might have this
                            if (blogEditor) {
                                blogEditor.setData(data.description);
                            }
                            if (data.profileImage) {
                                imagePreview.attr('src', data.profileImage);
                                imagePreviewContainer.show();
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching testimonial:", status, error, xhr);
                            toastr.error('Error fetching testimonial data for editing.', 'Error');
                        }
                    });
                }
            });

            // Event delegation for Edit button
            $('#testimonialTable').on('click', '.editTestimonialBtn', function () {
                const testimonialId = $(this).data('id');
                $('#testimonialModal').modal('show', this); // Pass the button element for context
            });

            // Event delegation for Delete button
            $('#testimonialTable').on('click', '.delTestimonialBtn', function () {
                const testimonialId = $(this).data('id');
                if (confirm('Are you sure you want to delete this testimonial?')) {
                    $.ajax({
                        url: '/testimonial/deleteTestimonial/' + testimonialId, // Replace with your actual delete route
                        type: 'delete',
                        dataType: 'json',
                        success: function () {
                            table.ajax.reload();
                            toastr.success('Testimonial deleted successfully!', 'Success');
                        },
                        error: function (xhr, status, error) {
                            console.error("Error deleting testimonial:", status, error, xhr);
                            toastr.error('Error deleting testimonial.', 'Error');
                        }
                    });
                }
            });
            $('#testimonialTable').on('click', '.changeStatus', function () {
                const testimonialId = $(this).data('id');
                const newStatus = $(this).data('status'); // Get the new status from the data attribute
                const statusText = parseInt(newStatus) === 1 ? 'Active' : 'Inactive'; // For confirmation message

                if (confirm(`Are you sure you want to set the status to ${statusText}?`)) {
                    $.ajax({
                        url: '/testimonial/changeStatus/' + testimonialId,
                        type: 'post',
                        dataType: 'json',
                        contentType: 'application/json', // Important for sending JSON data in the body
                        data: JSON.stringify({ status: newStatus }), // Send the new status in the request body
                        success: function (response) {
                            if (response.success) {
                                table.ajax.reload();
                                toastr.success(response.message, 'Success');
                            } else {
                                toastr.error(response.message || 'Failed to change status.', 'Error');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error changing status:", status, error, xhr);
                            toastr.error('Error changing status.', 'Error');
                        }
                    });
                }
            });
            // Prevent modal from staying open on form submission error (if any)
            $('#testimonialModal').on('hidden.bs.modal', function () {
                $(this).find('.is-invalid').removeClass('is-invalid');
                $(this).find('.invalid-feedback').remove();
            });

            // --- Custom Search Functionality ---
            $('#searchBtn').on('click', function () {
                const name = $('#searchName').val();
                const designation = $('#searchDesignation').val();
                const rating = $('#searchRating').val();
                const status = $('#searchStatus').val();
                const createdAt = $('#searchCreatedAt').val();

                table.column(1).search(name).draw(); // Search Name column (index 1)
                table.column(2).search(designation).draw(); // Search Designation column (index 2)
                table.column(4).search(rating).draw(); // Search Rating column (index 4)

                // Search Status column (index 5) - Adjust value to match your data (1 for Active, 2 for Inactive)
                let statusSearchValue = '';
                if (status === '1') {
                    statusSearchValue = 'Active';
                } else if (status === '2') {
                    statusSearchValue = 'Inactive';
                }
                table.column(5).search(statusSearchValue).draw();

                // Search Created At column (index 6) - You might need more complex logic for date range searching
                if (createdAt) {
                    table.column(6).search(new Date(createdAt).toLocaleDateString(), true, false).draw();
                }
            });

            $('#resetBtn').on('click', function () {
                $('#searchName').val('');
                $('#searchDesignation').val('');
                $('#searchRating').val('');
                $('#searchStatus').val('');
                $('#searchCreatedAt').val('');
                table.search('').columns().search('').draw(); // Clear all search filters
            });
        });
    </script>

</body>

</html>