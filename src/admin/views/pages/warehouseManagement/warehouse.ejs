<link rel="stylesheet" href="/admin/css/websiteManagement/tracking.css">
<style>
    .trackingHeadding {
        color: #252223;
    }

    .btn-close-white {
        filter: none !important;
    }

    .custom-modal {
        max-width: 70%;
    }
</style>
<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold">ðŸ“¦ Warehouse Management</h3>
        <div>
            <button class="btn btn-success me-2" id="downloadAllTrackingCsv">
                <i class="fas fa-download me-2"></i> Download CSV
            </button>
            <button class="btn btn-pink" data-bs-toggle="modal" data-bs-target="#trackingModal">
                <i class="fas fa-plus me-2"></i> Add Warehouse
            </button>
        </div>
    </div>

    <div class="card shadow-sm mb-4 d-none" id="searchTrackingCard">
        <div class="card-body">
            <h5 class="mb-3">Search Trackings</h5>
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="searchTrackingId" class="form-label">Tracking ID</label>
                    <input type="text" class="form-control" id="searchTrackingId" placeholder="Enter Tracking ID">
                </div>
                <div class="col-md-3">
                    <label for="searchStatus" class="form-label">Status</label>
                    <select id="searchStatus" class="form-select">
                        <option value="">All</option>
                        <option value="1">In Progress</option>
                        <option value="2">Pickup</option>
                        <option value="3">Out for Delivery</option>
                        <option value="4">Delivered</option>
                        <option value="5">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="searchDate" class="form-label">Estimate Date</label>
                    <input type="date" class="form-control" id="searchDate">
                </div>


                <div class="col-md-3 d-flex gap-2 align-items-end">
                    <button class="btn btn-primary" id="searchBtn">Search</button>
                    <button class="btn btn-secondary" id="resetBtn">Reset</button>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table id="trackingTable" class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>#</th>
                            <th> ID</th>
                            <th>Warehouse Name</th>
                            <th>Phone Number</th>
                            <th>Warehouse Address</th>
                            <th>Warehouse Location</th>
                            <th>Pincode</th>
                            <th>Status</th>
                            <th>Estimate Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="trackingModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="trackingModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg custom-modal">
        <div class="modal-content border-0 rounded-3">
            <div class="modal-header bg-pink text-white">
                <h5 class="modal-title trackingHeadding" id="trackingModalLabel">Add Warehouse</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <form id="trackingForm" enctype='multipart/form-data'>
                <div class="modal-body">
                    <input type="hidden" id="trackingId" name="id">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="trackingCode" class="form-label">Warehouse Name<strong
                                    class="text-danger">*</strong></label>
                            <input type="text" class="form-control" id="Warehousename" name="Warehousename"
                                autocomplete="off" placeholder="Enter Warehouse Name">
                        </div>
                        <div class="col-md-6">
                            <label for="pickUpLocation" class="form-label">Warehouse Location / City</label>
                            <input type="text" class="form-control" id="warehouseLocation"
                                placeholder="Enter Warehouse Location" name="warehouseLocation">
                        </div>
                        <div class="col-md-6">
                            <label for="warehouselatitude" class="form-label">Warehouse Latitude</label>
                            <input type="text" class="form-control" id="warehouselatitude"
                                placeholder="Enter Warehouse Latitude" name="warehouseLatitude">
                        </div>
                        <div class="col-md-6">
                            <label for="warehouselongitude" class="form-label">Warehouse Longitude</label>
                            <input type="text" class="form-control" id="warehouselongitude"
                                placeholder="Enter Warehouse Longitude" name="warehouseLongitude">
                        </div>
                        <div class="col-md-6">
                            <label for="warehouseAddress" class="form-label">Warehouse Address</label>
                            <input type="text" class="form-control" id="warehouseAddress"
                                placeholder="Enter Warehouse Address" name="warehouseAddress">
                        </div>
                        <div class="col-md-6">
                            <label for="pincode" class="form-label">Warehouse Pincode <strong
                                    class="text-danger">*</strong></label>
                            <input type="text" class="form-control" id="pincode" name="pincode"
                                placeholder="Enter Pincode ">
                        </div>

                        <div class="col-md-6">
                            <label for="phone" class="form-label">Warehouse Phone<strong
                                    class="text-danger">*</strong></label>
                            <input type="number" class="form-control" id="phone" name="phone"
                                placeholder="Enter No. of Warehouse Phone">
                        </div>

                        <div class="col-md-6">
                            <label for="trackingStatus" class="form-label">Status <strong
                                    class="text-danger">*</strong></label>
                            <select class="form-select" id="trackingStatus" name="status">
                                <option value="">Select Status</option>
                                <option value="1">Active</option>
                                <option value="2">In-Active</option>

                            </select>
                        </div>


                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-pink w-100">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    let trackingTable;
    // This ensures the script runs after the DOM is fully loaded
    $(document).ready(function () {

        $('#pod').on('change', function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').attr('src', e.target.result).show();
                    $('#filePreviewContainer').show();
                };
                reader.readAsDataURL(file);
            }
        });

        // Initialize DataTable
        trackingTable = $('#trackingTable').DataTable({
            processing: true,
            serverSide: true,
            ajax: {
                url: '/warehouse/warehouseList/',
                type: 'POST',
                data: function (d) {
                    d.trackingCode = $('#searchTrackingId').val();
                    d.pickUpLocation = $('#pickUpLocation').val();
                    d.dropLocation = $('#toLocation').val(); // Corrected ID here
                    d.status = $('#searchStatus').val();
                    d.date = $('#searchDate').val();
                }
            },
            columns: [
                {
                    data: null,
                    orderable: false, // Disable ordering for the index column
                    render: (data, type, row, meta) => meta.row + meta.settings._iDisplayStart + 1
                },
                {
                    data: '_id',
                    orderable: false,

                },
                {
                    data: 'Warehousename',
                    orderable: false,

                }, // Corrected data property to 'pickUpLocation'
                {
                    data: 'phone',
                    orderable: false,

                },
                {
                    data: 'warehouseAddress',
                    orderable: false,

                },
                { data: 'warehouseLocation' },
                { data: 'pincode' },

                {
                    data: 'status',
                    orderable: false,

                    render: function (data) {
                        // Status color mapping
                        let statusColor = '';
                        let statusText = '';

                        switch (parseInt(data)) { // Ensure data is treated as an integer for comparison
                            case 1:
                                statusColor = 'badge bg-warning'; // Pickup
                                statusText = 'Active';
                                break;
                            case 2:
                                statusColor = 'badge bg-info'; // Out for Delivery
                                statusText = 'Inactive';
                                break;
                            case 3:
                                statusColor = 'badge bg-primary'; // In Progress
                                statusText = 'Out for Delivery';
                                break;
                            case 4:
                                statusColor = 'badge bg-success'; // Delivered
                                statusText = 'Delivered';
                                break;
                            case 5:
                                statusColor = 'badge bg-danger'; // Cancelled
                                statusText = 'Cancelled';
                                break;
                            default:
                                statusColor = 'badge bg-secondary'; // Unknown
                                statusText = 'Unknown';
                                break;
                        }

                        return `<span class="${statusColor}">${statusText}</span>`;
                    }
                },



                {
                    data: 'deliveryDate', // Assuming your server returns the combined date and time in 'deliveryDate'
                    render: function (data) {
                        return moment(data).format('YYYY-MM-DD HH:mm:ss'); // Format the date and time as needed
                    }
                },
                {
                    data: null,
                    orderable: false,
                    render: function (data, type, row) {
                        return `
                            <button class="btn btn-sm btn-primary editBtn" data-id="${row._id}">Edit</button>
                            <button class="btn btn-sm btn-danger deleteBtn" data-id="${row._id}">Delete</button> `;
                    }
                }
            ]
        });

        // Search Button
        $('#searchBtn').click(function () {
            trackingTable.ajax.reload();
        });

        // Reset Button
        $('#resetBtn').click(function () {
            $('#searchTrackingId, #pickUpLocation, #toLocation, #searchStatus, #searchDate').val(''); // Included fromLocation and toLocation in reset
            trackingTable.ajax.reload();
        });

        // Submit Add/Edit Form
        $('#trackingForm').submit(function (e) {
            e.preventDefault();
            const formElement = document.getElementById('trackingForm'); // Corrected: Used 'trackingForm' instead of 'bannerForm'

            // Trimmed values
            const trackingCode = $('#trackingCode').val();
            const Warehousename = $('#Warehousename').val();
            const warehouseLocation = $('#warehouseLocation').val();
            const warehouseAddress = $('#warehouseAddress').val();
            const warehouseLatitude = $('#warehouselatitude').val();
            const warehouseLongitude = $('#warehouselongitude').val();
            const pincode = $('#pincode').val();
            const phone = $('#phone').val();
            // const deliveryTime = $('#deliveryTime').val().trim();
            const trackingStatus = $('#trackingStatus').val();
            // const id = $('#trackingId').val();

            // Validation
            // if (!trackingCode) {
            //     toastr.error('Please enter tracking ID', 'Validation Error');
            //     return;
            // }
            if (!Warehousename) {
                toastr.error('Please enter pickup location', 'Validation Error');
                return;
            }
            if (!warehouseLocation) {
                toastr.error('Please enter drop location', 'Validation Error');
                return;
            }
            if (!warehouseAddress) {
                toastr.error('Please enter transport mode', 'Validation Error');
                return;
            }
            if (!warehouseLatitude) {
                toastr.error('Please enter Warehouse Latitude', 'Validation Error');
                return;
            }
            if (!warehouseLongitude) {
                toastr.error('Please enter Warehouse Longtitude', 'Validation Error');
                return;
            }
            if (!pincode) {
                toastr.error('Please enter number of packings', 'Validation Error');
                return;
            }
            if (!phone) {
                toastr.error('Please select a date.', 'Validation Error');
                return;
            }
            // if (!deliveryTime) {
            //     toastr.error('Please select delivery time.', 'Validation Error');
            //     return;
            // }
            if (!trackingStatus) {
                toastr.error('Please select tracking status.', 'Validation Error');
                return;
            }


            const id = $('#trackingId').val();
            const formData = new FormData(formElement);

            if (trackingStatus != 4) {
                formData.delete("pod");

            }




            const actionUrl = id ? `/warehouse/editWarehouse/${id}` : '/warehouse/addWarehouse';

            $.ajax({
                url: actionUrl,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                dataType: 'json',
                success: function (response) {
                    $('#trackingModal').modal('hide');
                    $('#trackingForm')[0].reset();
                    trackingTable.ajax.reload();
                    toastr.success('Tracking Data saved successfully!', 'Success');
                    const form = $('#trackingForm')[0];
                    form.reset(); // Reset the form every time the modal is shown
                    $('#trackingModalLabel').text('Add Tracking')
                    $('#filePreviewContainer').addClass('d-none');


                    // window.location.reload();
                },
                error: function (xhr) {
                    const errorMsg = xhr.responseJSON?.message || 'Failed to save tracking.';
                    toastr.error(errorMsg, 'Error');
                }
            });
        });

        // Edit Button
        $(document).on('click', '.editBtn', function () {
            const id = $(this).data('id');


            $.ajax({
                url: '/warehouse/get/' + id,
                type: 'GET',
                success: function (data) {
                    $('#trackingId').val(data._id);
                    $('#Warehousename').val(data.Warehousename);
                    $('#warehouseLocation').val(data.warehouseLocation); // Added pickup location
                    $('#warehouseAddress').val(data.warehouseAddress); // Added drop location
                    $('#pincode').val(data.pincode); // Added transport mode
                    $('#phone').val(data.phone); // Added no of packing
                    $('#trackingStatus').val(data.status);
                    // $('#deliveryDate').val(moment(data.deliveryDate).format('YYYY-MM-DD')); // Corrected ID and format date
                    // let time = data.deliveryTime?.substring(0, 5); // "14:30:00" â†’ "14:30"
                    // $('#deliveryTime').val(time);

                    if (data.status == 4) {
                        $('.pod').removeClass('d-none');
                        $('#pod').attr('src', data.pod);
                        // alert(data.pod);

                        if (data.pod) {
                            // alert(11);
                            $('#filePreviewContainer').removeClass('d-none');

                            const imagePreview = $('#imagePreview');

                            const imagePreviewContainer = $('#filePreviewContainer');

                            imagePreview.attr('src', data.pod);
                            imagePreviewContainer.show();
                            imagePreview.css("display", "block");


                        }
                    }
                    else {
                        $('.pod').addClass('d-none');
                    }
                    $('#trackingModal').modal('show');
                }
            });

            $('#trackingStatus').change(function () {
                // Code to execute when the element's value changes
                console.log("The value of the element has changed!");
                let trackingVal = $(this).val();
                if (trackingVal == 4)
                    $('.pod').removeClass('d-none');
                else
                    $('.pod').addClass('d-none');

            });
        });

        $('#trackingTable').on('click', '.editBtn', function () {
            const trackingId = $(this).data('id');
            $('#trackingModalLabel').text('Edit Tracking')
            $('#trackingModal').modal('show', this); // Pass the button element for context
        });

        // Delete Button
        $(document).on('click', '.deleteBtn', function () {
            const id = $(this).data('id');
            if (confirm("Are you sure you want to delete this tracking?")) {
                $.ajax({
                    url: '/Warehouse/delete/' + id,
                    type: 'DELETE',
                    success: function () {
                        trackingTable.ajax.reload();
                    }
                });
            }
        });

        // Download CSV
        $('.btn-close').click(function () {
            window.location.reload();
        });

        $('#downloadAllTrackingCsv').click(function () {
            const params = new URLSearchParams({
                trackingCode: $('#searchTrackingId').val(),
                status: $('#searchStatus').val(),
                date: $('#searchDate').val()
            });
            window.location.href = '/tracking/downloadCsv?' + params.toString();
        });
    });

</script>